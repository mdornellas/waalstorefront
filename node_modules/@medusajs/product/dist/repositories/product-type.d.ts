import { ProductType } from "../models";
import { Context, CreateProductTypeDTO, DAL, UpdateProductTypeDTO } from "@medusajs/types";
import { SqlEntityManager } from "@mikro-orm/postgresql";
import { DALUtils } from "@medusajs/utils";
export declare class ProductTypeRepository extends DALUtils.MikroOrmBaseRepository {
    protected readonly manager_: SqlEntityManager;
    constructor({ manager }: {
        manager: SqlEntityManager;
    });
    find(findOptions?: DAL.FindOptions<ProductType>, context?: Context): Promise<ProductType[]>;
    findAndCount(findOptions?: DAL.FindOptions<ProductType>, context?: Context): Promise<[ProductType[], number]>;
    upsert(types: CreateProductTypeDTO[], context?: Context): Promise<ProductType[]>;
    delete(ids: string[], context?: Context): Promise<void>;
    create(data: CreateProductTypeDTO[], context?: Context): Promise<ProductType[]>;
    update(data: UpdateProductTypeDTO[], context?: Context): Promise<ProductType[]>;
}
