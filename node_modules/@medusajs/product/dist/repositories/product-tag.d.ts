import { ProductTag } from "../models";
import { Context, CreateProductTagDTO, DAL, UpdateProductTagDTO, UpsertProductTagDTO } from "@medusajs/types";
import { SqlEntityManager } from "@mikro-orm/postgresql";
import { DALUtils } from "@medusajs/utils";
export declare class ProductTagRepository extends DALUtils.MikroOrmBaseRepository {
    protected readonly manager_: SqlEntityManager;
    constructor({ manager }: {
        manager: SqlEntityManager;
    });
    find(findOptions?: DAL.FindOptions<ProductTag>, context?: Context): Promise<ProductTag[]>;
    findAndCount(findOptions?: DAL.FindOptions<ProductTag>, context?: Context): Promise<[ProductTag[], number]>;
    create(data: CreateProductTagDTO[], context?: Context): Promise<ProductTag[]>;
    update(data: UpdateProductTagDTO[], context?: Context): Promise<ProductTag[]>;
    upsert(tags: UpsertProductTagDTO[], context?: Context): Promise<ProductTag[]>;
    delete(ids: string[], context?: Context): Promise<void>;
}
