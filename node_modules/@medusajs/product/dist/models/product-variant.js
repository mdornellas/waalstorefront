"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("@medusajs/utils");
const core_1 = require("@mikro-orm/core");
const _models_1 = require(".");
const product_option_value_1 = __importDefault(require("./product-option-value"));
let ProductVariant = class ProductVariant {
    constructor() {
        // Note: Upon serialization, this turns to a string. This is on purpose, because you would loose
        // precision if you cast numeric to JS number, as JS number is a float.
        // Ref: https://github.com/mikro-orm/mikro-orm/issues/2295
        this.inventory_quantity = 100;
        this.allow_backorder = false;
        this.manage_inventory = true;
        this.options = new core_1.Collection(this);
    }
    onCreate() {
        this.id = (0, utils_1.generateEntityId)(this.id, "variant");
    }
};
__decorate([
    (0, core_1.PrimaryKey)({ columnType: "text" }),
    __metadata("design:type", String)
], ProductVariant.prototype, "id", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "text" }),
    __metadata("design:type", String)
], ProductVariant.prototype, "title", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "text", nullable: true }),
    (0, core_1.Unique)({
        name: "IDX_product_variant_sku_unique",
        properties: ["sku"],
    }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "sku", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "text", nullable: true }),
    (0, core_1.Unique)({
        name: "IDX_product_variant_barcode_unique",
        properties: ["barcode"],
    }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "barcode", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "text", nullable: true }),
    (0, core_1.Unique)({
        name: "IDX_product_variant_ean_unique",
        properties: ["ean"],
    }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "ean", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "text", nullable: true }),
    (0, core_1.Unique)({
        name: "IDX_product_variant_upc_unique",
        properties: ["upc"],
    }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "upc", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "numeric", default: 100 }),
    __metadata("design:type", Number)
], ProductVariant.prototype, "inventory_quantity", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "boolean", default: false }),
    __metadata("design:type", Boolean)
], ProductVariant.prototype, "allow_backorder", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "boolean", default: true }),
    __metadata("design:type", Boolean)
], ProductVariant.prototype, "manage_inventory", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "text", nullable: true }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "hs_code", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "text", nullable: true }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "origin_country", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "text", nullable: true }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "mid_code", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "text", nullable: true }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "material", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "numeric", nullable: true }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "weight", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "numeric", nullable: true }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "length", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "numeric", nullable: true }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "height", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "numeric", nullable: true }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "width", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "jsonb", nullable: true }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "metadata", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "numeric", nullable: true, default: 0 }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "variant_rank", void 0);
__decorate([
    (0, core_1.Property)({ columnType: "text", nullable: true }),
    __metadata("design:type", String)
], ProductVariant.prototype, "product_id", void 0);
__decorate([
    (0, core_1.Property)({
        onCreate: () => new Date(),
        columnType: "timestamptz",
        defaultRaw: "now()",
    }),
    __metadata("design:type", Date)
], ProductVariant.prototype, "created_at", void 0);
__decorate([
    (0, core_1.Property)({
        onCreate: () => new Date(),
        onUpdate: () => new Date(),
        columnType: "timestamptz",
        defaultRaw: "now()",
    }),
    __metadata("design:type", Date)
], ProductVariant.prototype, "updated_at", void 0);
__decorate([
    (0, core_1.Index)({ name: "IDX_product_variant_deleted_at" }),
    (0, core_1.Property)({ columnType: "timestamptz", nullable: true }),
    __metadata("design:type", Date)
], ProductVariant.prototype, "deleted_at", void 0);
__decorate([
    (0, core_1.ManyToOne)(() => _models_1.Product, {
        onDelete: "cascade",
        index: "IDX_product_variant_product_id",
        fieldName: "product_id",
    }),
    __metadata("design:type", _models_1.Product)
], ProductVariant.prototype, "product", void 0);
__decorate([
    (0, core_1.OneToMany)(() => product_option_value_1.default, (optionValue) => optionValue.variant, {
        cascade: [core_1.Cascade.PERSIST, core_1.Cascade.REMOVE, "soft-remove"],
    }),
    __metadata("design:type", Object)
], ProductVariant.prototype, "options", void 0);
__decorate([
    (0, core_1.BeforeCreate)(),
    __metadata("design:type", Function),
    __metadata("design:paramtypes", []),
    __metadata("design:returntype", void 0)
], ProductVariant.prototype, "onCreate", null);
ProductVariant = __decorate([
    (0, core_1.Entity)({ tableName: "product_variant" }),
    (0, core_1.Filter)(utils_1.DALUtils.mikroOrmSoftDeletableFilterOptions)
], ProductVariant);
exports.default = ProductVariant;
