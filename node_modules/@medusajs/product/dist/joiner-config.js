"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.joinerConfig = exports.entityNameToLinkableKeysMap = exports.LinkableKeys = void 0;
const modules_sdk_1 = require("@medusajs/modules-sdk");
const _models_1 = require("./models");
const product_image_1 = __importDefault(require("./models/product-image"));
const schema_1 = __importDefault(require("./schema"));
exports.LinkableKeys = {
    product_id: _models_1.Product.name,
    product_handle: _models_1.Product.name,
    variant_id: _models_1.ProductVariant.name,
    variant_sku: _models_1.ProductVariant.name,
    product_option_id: _models_1.ProductOption.name,
    product_type_id: _models_1.ProductType.name,
    product_category_id: _models_1.ProductCategory.name,
    product_collection_id: _models_1.ProductCollection.name,
    product_tag_id: _models_1.ProductTag.name,
    product_image_id: product_image_1.default.name,
};
const entityLinkableKeysMap = {};
Object.entries(exports.LinkableKeys).forEach(([key, value]) => {
    entityLinkableKeysMap[value] ?? (entityLinkableKeysMap[value] = []);
    entityLinkableKeysMap[value].push({
        mapTo: key,
        valueFrom: key.split("_").pop(),
    });
});
exports.entityNameToLinkableKeysMap = entityLinkableKeysMap;
exports.joinerConfig = {
    serviceName: modules_sdk_1.Modules.PRODUCT,
    primaryKeys: ["id", "handle"],
    linkableKeys: exports.LinkableKeys,
    schema: schema_1.default,
    alias: [
        {
            name: "product",
        },
        {
            name: "products",
        },
        {
            name: "variant",
            args: {
                methodSuffix: "Variants",
            },
        },
        {
            name: "variants",
            args: {
                methodSuffix: "Variants",
            },
        },
        {
            name: "product_option",
            args: {
                methodSuffix: "Options",
            },
        },
        {
            name: "product_options",
            args: {
                methodSuffix: "Options",
            },
        },
        {
            name: "product_type",
            args: {
                methodSuffix: "Types",
            },
        },
        {
            name: "product_types",
            args: {
                methodSuffix: "Types",
            },
        },
        {
            name: "product_image",
            args: {
                methodSuffix: "Images",
            },
        },
        {
            name: "product_images",
            args: {
                methodSuffix: "Images",
            },
        },
        {
            name: "product_tag",
            args: {
                methodSuffix: "Tags",
            },
        },
        {
            name: "product_tags",
            args: {
                methodSuffix: "Tags",
            },
        },
        {
            name: "product_collection",
            args: {
                methodSuffix: "Collections",
            },
        },
        {
            name: "product_collections",
            args: {
                methodSuffix: "Collections",
            },
        },
        {
            name: "product_category",
            args: {
                methodSuffix: "Categories",
            },
        },
        {
            name: "product_categories",
            args: {
                methodSuffix: "Categories",
            },
        },
    ],
};
