import { Context, DAL, UpdatePriceSetDTO, CreatePriceSetRuleTypeDTO } from "@medusajs/types";
import { DALUtils } from "@medusajs/utils";
import { SqlEntityManager } from "@mikro-orm/postgresql";
import { PriceSetRuleType } from "../models";
export declare class PriceSetRuleTypeRepository extends DALUtils.MikroOrmBaseRepository {
    protected readonly manager_: SqlEntityManager;
    constructor({ manager }: {
        manager: SqlEntityManager;
    });
    find(findOptions?: DAL.FindOptions<PriceSetRuleType>, context?: Context): Promise<PriceSetRuleType[]>;
    findAndCount(findOptions?: DAL.FindOptions<PriceSetRuleType>, context?: Context): Promise<[PriceSetRuleType[], number]>;
    delete(ids: string[], context?: Context): Promise<void>;
    create(data: CreatePriceSetRuleTypeDTO[], context?: Context): Promise<PriceSetRuleType[]>;
    update(data: UpdatePriceSetDTO[], context?: Context): Promise<PriceSetRuleType[]>;
}
