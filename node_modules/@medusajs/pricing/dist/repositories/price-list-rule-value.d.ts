import { Context, DAL } from "@medusajs/types";
import { DALUtils } from "@medusajs/utils";
import { SqlEntityManager } from "@mikro-orm/postgresql";
import { PriceListRuleValue } from "../models";
import { CreatePriceListRuleValueDTO, UpdatePriceListRuleValueDTO } from "../types";
export declare class PriceListRuleValueRepository extends DALUtils.MikroOrmBaseRepository {
    protected readonly manager_: SqlEntityManager;
    constructor({ manager }: {
        manager: SqlEntityManager;
    });
    find(findOptions?: DAL.FindOptions<PriceListRuleValue>, context?: Context): Promise<PriceListRuleValue[]>;
    findAndCount(findOptions?: DAL.FindOptions<PriceListRuleValue>, context?: Context): Promise<[PriceListRuleValue[], number]>;
    delete(ids: string[], context?: Context): Promise<void>;
    create(data: CreatePriceListRuleValueDTO[], context?: Context): Promise<PriceListRuleValue[]>;
    update(data: UpdatePriceListRuleValueDTO[], context?: Context): Promise<PriceListRuleValue[]>;
}
