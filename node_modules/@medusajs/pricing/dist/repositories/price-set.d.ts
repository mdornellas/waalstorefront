import { UpdatePriceListDTO } from "@medusajs/types";
import { Context, DAL, CreatePriceSetDTO } from "@medusajs/types";
import { DALUtils } from "@medusajs/utils";
import { SqlEntityManager } from "@mikro-orm/postgresql";
import { PriceSet } from "../models";
export declare class PriceSetRepository extends DALUtils.MikroOrmBaseRepository {
    protected readonly manager_: SqlEntityManager;
    constructor({ manager }: {
        manager: SqlEntityManager;
    });
    find(findOptions?: DAL.FindOptions<PriceSet>, context?: Context): Promise<PriceSet[]>;
    findAndCount(findOptions?: DAL.FindOptions<PriceSet>, context?: Context): Promise<[PriceSet[], number]>;
    delete(ids: string[], context?: Context): Promise<void>;
    create(data: Omit<CreatePriceSetDTO, "rules">[], context?: Context): Promise<PriceSet[]>;
    update(data: Omit<UpdatePriceListDTO, "rules">[], context?: Context): Promise<PriceSet[]>;
}
