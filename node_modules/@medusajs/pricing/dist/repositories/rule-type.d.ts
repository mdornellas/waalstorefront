import { Context, CreateRuleTypeDTO, DAL, UpdateRuleTypeDTO } from "@medusajs/types";
import { DALUtils } from "@medusajs/utils";
import { SqlEntityManager } from "@mikro-orm/postgresql";
import { RuleType } from "../models";
export declare class RuleTypeRepository extends DALUtils.MikroOrmBaseRepository {
    protected readonly manager_: SqlEntityManager;
    constructor({ manager }: {
        manager: SqlEntityManager;
    });
    find(findOptions?: DAL.FindOptions<RuleType>, context?: Context): Promise<RuleType[]>;
    findAndCount(findOptions?: DAL.FindOptions<RuleType>, context?: Context): Promise<[RuleType[], number]>;
    delete(ids: string[], context?: Context): Promise<void>;
    create(data: CreateRuleTypeDTO[], context?: Context): Promise<RuleType[]>;
    update(data: UpdateRuleTypeDTO[], context?: Context): Promise<RuleType[]>;
}
