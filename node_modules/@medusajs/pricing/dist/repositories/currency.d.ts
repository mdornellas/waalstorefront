import { Context, CreateCurrencyDTO, DAL, UpdateCurrencyDTO } from "@medusajs/types";
import { DALUtils } from "@medusajs/utils";
import { SqlEntityManager } from "@mikro-orm/postgresql";
import { Currency } from "../models";
export declare class CurrencyRepository extends DALUtils.MikroOrmBaseRepository {
    protected readonly manager_: SqlEntityManager;
    constructor({ manager }: {
        manager: SqlEntityManager;
    });
    find(findOptions?: DAL.FindOptions<Currency>, context?: Context): Promise<Currency[]>;
    findAndCount(findOptions?: DAL.FindOptions<Currency>, context?: Context): Promise<[Currency[], number]>;
    delete(codes: string[], context?: Context): Promise<void>;
    create(data: CreateCurrencyDTO[], context?: Context): Promise<Currency[]>;
    update(data: UpdateCurrencyDTO[], context?: Context): Promise<Currency[]>;
}
