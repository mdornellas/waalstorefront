import { Context, CreatePriceRuleDTO, DAL, UpdatePriceRuleDTO } from "@medusajs/types";
import { DALUtils } from "@medusajs/utils";
import { PriceRule } from "../models";
import { SqlEntityManager } from "@mikro-orm/postgresql";
export declare class PriceRuleRepository extends DALUtils.MikroOrmBaseRepository {
    protected readonly manager_: SqlEntityManager;
    constructor({ manager }: {
        manager: SqlEntityManager;
    });
    find(findOptions?: DAL.FindOptions<PriceRule>, context?: Context): Promise<PriceRule[]>;
    findAndCount(findOptions?: DAL.FindOptions<PriceRule>, context?: Context): Promise<[PriceRule[], number]>;
    delete(ids: string[], context?: Context): Promise<void>;
    create(data: CreatePriceRuleDTO[], context?: Context): Promise<PriceRule[]>;
    update(data: UpdatePriceRuleDTO[], context?: Context): Promise<PriceRule[]>;
}
